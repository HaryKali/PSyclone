# -----------------------------------------------------------------------------
# BSD 3-Clause License
#
# Copyright (c) 2018, Science and Technology Facilities Council
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#------------------------------------------------------------------------------
# Author A. R. Porter, STFC Daresbury Lab

This is a very simple, single-kernel example of the use of PSyclone to
generate an application that will run on a GPU. The kernel simply
increments a field by adding the current value of the time-stepping
loop index.

The Makefile and this version of PSyclone work with version 1.0 of the GOcean
API.

In order to use PSyclone you must first install it, ideally with pip.
See ../../README.md for more details.

In order to compile and run this example you will need the dl_esm_inf
infrastructure library installed (github.com/stfc/dl_esm_inf). The directory
containing the dl_esm_inf directory must be specified in the Makefile
(SHARED_DIR). The compiler and flags to use are picked up from
environment variables (and must be the same as used for the dl_esm_inf
library). e.g. for an NVIDIA Volta:

export F90=pgf90
export F90FLAGS="-O3 -Minfo=all -acc -ta=tesla,cc70 -Mipa=inline:reshape"
export LDFLAGS="-acc -ta=tesla,cc70 -Mipa=inline:reshape"

Note that the -Mipa=inline flag is essential since otherwise the PGI
compiler cannot find the accelerator version of the compiled kernel.
(Currently PSyclone's module-inline transformation cannot be used on
a kernel that has been transformed for use with OpenACC [issue #229].
However, once this restriction is lifted then the -Mipa flag will not
be required.)

Note also that the kernel currently has the extent of the field array
as explicit arguments. This is because PGI does not support
assumed-size arrays within compute regions. Once PSyclone has been
extended to automatically provide this information (issue #230), these
arguments can be removed from the kernel meta-data and algorithm
layer.