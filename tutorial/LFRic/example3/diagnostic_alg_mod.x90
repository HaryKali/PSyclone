! -----------------------------------------------------------------------------
! BSD 3-Clause License
!
! Copyright (c) 2020, Science and Technology Facilities Council.
! All rights reserved.
!
! Redistribution and use in source and binary forms, with or without
! modification, are permitted provided that the following conditions are met:
!
! * Redistributions of source code must retain the above copyright notice, this
!   list of conditions and the following disclaimer.
!
! * Redistributions in binary form must reproduce the above copyright notice,
!   this list of conditions and the following disclaimer in the documentation
!   and/or other materials provided with the distribution.
!
! * Neither the name of the copyright holder nor the names of its
!   contributors may be used to endorse or promote products derived from
!   this software without specific prior written permission.
!
! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
! "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
! LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
! FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
! COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
! INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
! BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
! LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
! CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
! LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
! ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
! POSSIBILITY OF SUCH DAMAGE.
! -----------------------------------------------------------------------------
! Author: I. Kavcic, Met Office
!
! -----------------------------------------------------------------------------
! Calls a kernel to map the coordinate fields from its space (W0 or Wchi) to
! the space of a perturbation field (W3) and calls IO routine to output the
! coordinate and perturbation field data for plotting.
! -----------------------------------------------------------------------------
module diagnostic_alg_mod

  use constants_mod,                only : i_def, r_def, str_short
  use log_mod,                      only : log_event, &
                                           LOG_LEVEL_INFO
  use field_mod,                    only : field_type
  use nodal_coordinates_kernel_mod, only : nodal_coordinates_kernel_type

  implicit none

  private

  public :: diagnostic_alg

contains

  subroutine diagnostic_alg(chi, perturbation, filename)

    implicit none

    ! Input arguments from the driver: Coordinate fields, perturbation
    ! field and output filename
    type(field_type), intent(in)    :: chi(:)
    type(field_type), intent(inout) :: perturbation
    character(*),     intent(in)    :: filename

    ! Local variables
    ! Mapped coordinate fields
    type(field_type)         :: chi_map(size(chi))
    ! String for naming mapped coordinate fields
    character(len=str_short) :: cind
    integer(kind=i_def)      :: i

    ! Create mapped coordinate fields by copying perturbation field
    ! properties and initialise them to 0 by using built-ins
    call log_event( "diagnostic_alg: Creating mapped coordinate fields", &
                    LOG_LEVEL_INFO )
    do i = 1, size(chi_map)
      write(cind, '(I5)') i
      call perturbation%copy_field_properties( &
                        chi_map(i), name="chi_map_"//trim(adjustl(cind)))
      call invoke( setval_c(chi_map(i), 0.0_r_def) )
    end do

    ! Map coordinates from chi function space to chi_map function space
    call log_event( "diagnostic_alg: Mapping coordinate fields to "// &
                    "perturbation function space ", LOG_LEVEL_INFO )
    call invoke( nodal_coordinates_kernel_type(chi_map, chi) )
    do i = 1, size(chi_map)
      call chi_map(i)%log_minmax(LOG_LEVEL_INFO, chi_map(i)%name)
    end do

  end subroutine diagnostic_alg

end module diagnostic_alg_mod
